if (typeof(RadSpellNamespace)=="u\x6e\x64efined")RadSpellNamespace= {} ; RadSpellNamespace.SpellProcessor= function (lh,ih,Ih){ this.TextToCheck=lh; this.BadWords=ih; this.WordOffsets=Ih; this.CurrentBadWordIndex=0; this.oi="\x73pell_\x68\x69ghlig\x68\x74_"; this.UndoActions=[]; this.SurroundingWordsCount=10; };RadSpellNamespace.SpellProcessor.prototype= {Oi: 0,ii: 1,Ii: 2,oj: 3,Oj: 4,MoveToNextWord:function (){var lj=this.GetNextBadWordIndex(); if (lj<0){return; } this.CurrentBadWordIndex=lj; } ,MoveToPreviousWord:function (){ this.CurrentBadWordIndex=this.GetNextBadWordIndex(0); } ,GetNextBadWordIndex:function (ij){if (typeof(ij)!="\x75ndefi\x6e\x65d"){}else {ij=this.CurrentBadWordIndex; }for (var i=ij; i<this.BadWords.length; i++){if (this.GetBadWord(i).og==null){return i; }}return -1; } ,AreAllWordsFixed:function (){return this.GetNextBadWordIndex()<0; } ,GetCurrentErrorContent:function (){var Ij=this.GetCurrentBadWord(); return this.GetStartString(this.CurrentBadWordIndex, true)+"<a s\x74yle=\047\x62ord\x65\x72-b\x6fttom: 1\x70\x78 d\x6f\x74te\x64 red\x3b\146o\x6et-weig\x68t: bo\x6c\144\x3b\047\x20id="+this.Oe()+">"+Ij.wordString+"\x3c/a>"+this.GetEndString(this.CurrentBadWordIndex, true); } ,Oe:function (){return this.oi+this.GetCurrentBadWord().wordString; } ,GetStartString:function (ok,Ok){var lk=0; var Ij=this.GetBadWord(ok); if (Ok && (Ij.textOffset>this.SurroundingWordsCount)){var ik=Ij.textOffset-this.SurroundingWordsCount; lk=this.WordOffsets[ik]; }return this.TextToCheck.substring(lk,this.GetWordStartCharIndex(ok)); } ,GetEndString:function (ok,Ok){var Ik=this.TextToCheck.length; var Ij=this.GetBadWord(ok); if (Ok && (this.WordOffsets.length>Ij.textOffset+this.SurroundingWordsCount)){var ll=Ij.textOffset+this.SurroundingWordsCount; Ik=this.WordOffsets[ll]; }return this.TextToCheck.substring(this.GetWordEndCharIndex(ok),Ik); } ,GetWordStartCharIndex:function (ok){return this.WordOffsets[this.GetWordOffset(ok)]; } ,GetWordEndCharIndex:function (ok){return this.GetWordStartCharIndex(ok)+this.GetBadWord(ok).wordString.length; } ,GetBadWord:function (il){return this.BadWords[il]; } ,GetCurrentBadWord:function (){return this.GetBadWord(this.CurrentBadWordIndex); } ,GetWordOffset:function (ok){return this.GetBadWord(ok).textOffset; } ,GetCurrentWordOffset:function (){return this.GetCurrentBadWord().textOffset; } ,GetCurrentSuggestions:function (){return this.GetCurrentBadWord().suggestionsString; } ,Ignore:function (){ this.Il(this.GetCurrentBadWord().wordString,RadSpellNamespace.SpellProcessor.Ii); } ,IgnoreAll:function (){ this.om(this.GetCurrentBadWord().wordString,RadSpellNamespace.SpellProcessor.oj); } ,Change:function (ib){ this.Il(ib,RadSpellNamespace.SpellProcessor.Oi); } ,ChangeAll:function (ib){ this.om(ib,RadSpellNamespace.SpellProcessor.ii); } ,ProcessCustomWordAddition:function (){var Om=this.GetSameWordStringBadWordIndexes(); for (var i=Om.length-1; i>=0; i--){var Im=Om[i]; this.BadWords.splice(Im,1); } this.MoveToNextWord(); } ,Il:function (ib,On){var In=[this.CurrentBadWordIndex]; this.ProcessChange(In,ib, false ,On); this.RegisterUndoStep(In); } ,om:function (ib,On){var In=this.GetSameWordStringBadWordIndexes(); this.ProcessChange(In,ib, false ,On);this.RegisterUndoStep(In); } ,ChangeText:function (ok,oo){ this.TextToCheck=this.GetStartString(ok, false)+oo+this.GetEndString(ok, false); } ,Oo:function (Io){var Og=[]; for (var i=0; i<Io.length; i++){Og[Og.length]=this.GetWordOffset(Io[i]); }return Og; } ,op:function (){var Op=this.GetCurrentUndoAction(); return this.Oo(Op); } ,Oa:function (){var Og=[]; var lp=this.op(); for (var i=0; i<lp.length; i++){Og[Og.length]=this.WordOffsets[lp[i]]; }return Og; } ,GetSameWordStringBadWordIndexes:function (){var O9=this.GetCurrentBadWord().wordString; var ip=[this.CurrentBadWordIndex]; for (var ok=this.CurrentBadWordIndex+1; ok<this.BadWords.length; ok++){if (this.GetBadWord(ok).wordString==O9){ip[ip.length]=ok; }}return ip; } ,Undo:function (){var Ip=this.GetCurrentUndoAction(); var og=this.GetBadWord(Ip[0]).og; this.ProcessChange(Ip,og, true); this.UnregisterUndoStep(); this.MoveToPreviousWord(); } ,CorrectWord:function (ok,oq,On){if (this.GetBadWord(ok).og){return; }var Oq=this.GetBadWord(ok); Oq.og=Oq.wordString; Oq.wordString=oq; Oq.On=On; } ,RestoreWord:function (ok){var Oq=this.GetBadWord(ok); Oq.wordString=Oq.og; Oq.og=null; Oq.On=null; } ,ProcessChange:function (In,oo,lq,On){for (var i=0; i<In.length; i++){var iq=In[i]; var Iq=this.GetBadWord(iq); var or=oo.length-Iq.wordString.length; this.AdjustOffsetsAfterChangedWord(Iq,or); this.ChangeText(iq,oo); if (lq){ this.RestoreWord(iq); }else { this.CorrectWord(iq,oo,On); }}} ,AdjustOffsetsAfterChangedWord:function (Iq,or){for (var Or=Iq.textOffset+1; Or<this.WordOffsets.length; Or++){ this.WordOffsets[Or]+=or; }} ,GetCurrentUndoAction:function (){if (this.UndoActions.length==0){return null; }return this.UndoActions[this.UndoActions.length-1]; } ,RegisterUndoStep:function (lr){ this.UndoActions[this.UndoActions.length]=lr; } ,UnregisterUndoStep:function (){ this.UndoActions=this.UndoActions.slice(0,-1); } ,ia:function (){for (var i=0; i<this.CurrentBadWordIndex; i++){var On=this.GetBadWord(i).On; if (On==RadSpellNamespace.SpellProcessor.Oi || On==RadSpellNamespace.SpellProcessor.ii){return true; }}return false; }};
if (typeof(Sys) != "undefined"){if (Sys.Application != null && Sys.Application.notifyScriptLoaded != null){Sys.Application.notifyScriptLoaded();}}
